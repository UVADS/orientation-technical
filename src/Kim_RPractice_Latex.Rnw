\title{R Practice for Tech Orientation}
\author{Minah}
\date{6/15/22}
\documentclass{article}

% Load packages

% Useful/"necessary" package to easily write math symbols and equations
\usepackage{amsmath}

% Package used to put long tables on multiple pages; this package is usually unnecessary, and so I do not tend to include it, but there may be times where this package can be useful
%\usepackage{longtable}

% Makes all graphics take up the width of the page (feel free to change the width to fit your needs)
\setkeys{Gin}{width=\textwidth}

% Use to set margin
\usepackage[letterpaper, margin=1in]{geometry}
<<R setup,include=FALSE>>=
# echo sets whether the R code itself will appear in the document
opts_chunk$set(echo=FALSE,warning=FALSE,error=FALSE,cache=FALSE,fig.width=6, fig.height=5,tidy=TRUE)
# This is just the options function in R; scipen formats scientific notation, while digits specify how many decimal places will be seen throughout all results in R
options(digits = 0)
@

\usepackage{tabularx}

<<Data Organizing,include=FALSE>>=
#---------------------------------------------------------------
# Program: R Practice for Tech Orientation
# Author: Minah Kim
# Date: 6/15/22
#---------------------------------------------------------------

#---------------#
# Load packages #
#---------------#
library(psych)
library(stringi)
library(tidyverse)
library(xtable)

#-----------------------#
# Set working directory #
#-----------------------#
setwd("C:/Users/mk7kc/Desktop/DS/Tech_Orientation/R_Practice")

#--------------#
# Read in data #
#--------------#
dat <- read.csv('2022-06-14-survey.csv',check.names=FALSE)

#--------------#
# Examine data #
#--------------#
colnames(dat)
str(dat)
describe(dat)
# 62 obs, 8 variables

#-----------------------------------#
# Examine Operating System Variable #
#-----------------------------------#
table(dat$`Operating System`)
# Any Linux: 2
# MacOS: 36
# Windows: 24

#---------------------------------#
# Examine CPU Cycle Rate (in GHz) #
#---------------------------------#
hist(dat$`CPU Cycle Rate (in GHz)`,freq=FALSE)
# There is one potential error response cause one person responded as having 500 Ghz
# Remove outlier
outlier_CPU <- which(dat$`CPU Cycle Rate (in GHz)`==500)
CPUCycle <- dat$`CPU Cycle Rate (in GHz)`[-outlier_CPU]
hist(CPUCycle,freq=FALSE)
describe(CPUCycle)
# mean: 2.52
# sd: .64
# max: 4.7
# min: 1.1

#-----------------------------------#
# Examine CPU Number of Cores (int) #
#-----------------------------------#
table(dat$`CPU Number of Cores (int)`)
# Potential error response cause one person responded -3
outlier_CPUCoreNum <- which(dat$`CPU Number of Cores (int)`==-3)
CPUCoreNum <- dat$`CPU Number of Cores (int)`[-outlier_CPUCoreNum]
hist(CPUCoreNum)
# Find out info about the ppl who have 14 cores
which(dat$`CPU Number of Cores (int)`==14)
dat[c(7,11,27,60),]
describe(CPUCoreNum)
# mode (since it's categorical): 
mode(CPUCoreNum)
# mean: 5.38
# sd: 3.45
# min: 1
# max: 14

#--------------------#
# Examine RAM in GB) #
#--------------------#
table(dat$`RAM (in GB)`)
# Remove outlier
outlier_RAM <- which(dat$`RAM (in GB)`>32)
RAM <- dat$`RAM (in GB)`[-outlier_RAM]
hist(RAM)
table(RAM)
# 1 with 4, 25 with 8, 1 with 12, 31 with 16, 3 with 32

#---------------------------------#
# Examine Hard Drive Size (in GB) #
#---------------------------------#
HD <- dat$`Hard Drive Size (in GB)`[-2]
table(HD)
hist(HD)

#-------------#
# Examine GPU #
#-------------#
GPU <- dat$`GPU (short description as a string)`[-2]
table(GPU)
# lots of different spellings -> use regular expression to group them more 
GPU_abbv <- stri_replace_all_regex(GPU,"[Ii]ntel.*|.*Intel.*","Intel")
GPU_abbv <- stri_replace_all_regex(GPU_abbv,"Apple.*","Apple M1")
GPU_abbv <- stri_replace_all_regex(GPU_abbv,"NVIDIA.*","NVIDIA")
table(GPU_abbv)
which(GPU_abbv=="8")
which(GPU_abbv=="equipment that quickly alters memory to render graphics")
GPU_abbv[c(8,14)]<-"Other"
#-----------------------------#
# Examine GPU CUDA # of Cores #
#-----------------------------#
CUDA <- dat$`GPU CUDA Number of Cores (int)`[-2]
table(CUDA)
@
\begin{document}
\maketitle
\clearpage
\section{Check GPU Types - Aggregated}
There were too many different GPU Types spelled differently. Data were aggregated into 'Intel", "Apple M1", etc. 
<<include=FALSE>>=
#GPU_df <- data.frame("Intel"="38","AMD"="1","Apple M1"="13","GTX"="1","NVIDIA"="6","Unknown"="2")
# reorganize columns
GPU_df <- as.data.frame(table(GPU_abbv),stringsAsFactors = FALSE)
colnames(GPU_df) <- c("GPU_Name","Frequency")
GPU_df[1,1]<-"AMD"
GPU_xtable <- xtable(GPU_df)
colnames(GPU_xtable) <- c("GPU Name","Frequency")
large<-function(x){ paste0('{\\bfseries ', x, '}') }
#small<-function(x){ paste0('{\\small ', x, '}') }
#align(admission_table) <- "YYYYYY"
@

<<results='asis'>>=
print(GPU_xtable,tabular.environment="tabularx",size="\\fontsize{14pt}{14pt}\\selectfont",width="\\textwidth",include.rownames=FALSE,sanitize.colnames.function=large)
@
<<>>=
GPU_plot<-ggplot(GPU_df, aes(x=GPU_Name, y=Frequency, fill=GPU_Name, color=GPU_Name)) +
   geom_bar(stat="identity") +
        labs(x = "GPU Types", 
             y = "Frequency") +
        theme_minimal() +
        theme(legend.position = "none",axis.text.x = element_text(size=60,color='black'),axis.text.y = element_text(size=60,color='black'),
              axis.title=element_text(face="bold",size=65))
ggsave(file="GPU_barplot.pdf", plot=GPU_plot, width=35, height=22)
@
\includegraphics[width=\textwidth,height=.96\textheight,keepaspectratio]{GPU_barplot}
\end{document}
